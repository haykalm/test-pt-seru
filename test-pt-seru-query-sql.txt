1. Tampilkan daftar siswa beserta kelas dan guru yang mengajar kelas tersebut:
SELECT students.name AS student_name, students.age, classes.name AS class_name, teachers.name AS teacher_name, teachers.subject
FROM students
JOIN classes ON students.class_id = classes.id
JOIN teachers ON classes.teacher_id = teachers.id;

2. Tampilkan daftar kelas yang diajar oleh guru yang sama:
SELECT teachers.name AS teacher_name, GROUP_CONCAT(classes.name) AS classes
FROM classes
JOIN teachers ON classes.teacher_id = teachers.id
GROUP BY teachers.id, teachers.name;

3. buat query view untuk siswa, kelas, dan guru yang mengajar:
CREATE VIEW student_class_teacher AS
SELECT students.name AS student_name, students.age, classes.name AS class_name, teachers.name AS teacher_name, teachers.subject
FROM students
JOIN classes ON students.class_id = classes.id
JOIN teachers ON classes.teacher_id = teachers.id;

4. buat query yang sama tapi menggunakan store_procedure:
DELIMITER //
CREATE PROCEDURE GetStudentClassTeacher()
BEGIN
    SELECT students.name AS student_name, students.age, classes.name AS class_name, teachers.name AS teacher_name, teachers.subject
    FROM students
    JOIN classes ON students.class_id = classes.id
    JOIN teachers ON classes.teacher_id = teachers.id;
END //
DELIMITER ;

CALL GetStudentClassTeacher();

5. buat query input, yang akan memberikan warning error jika ada data yang sama pernah masuk:
DELIMITER //
CREATE PROCEDURE AddStudent(IN student_name VARCHAR(100), IN student_age INT, IN student_class_id INT)
BEGIN
    DECLARE student_exists INT;
    
    SELECT COUNT(*) INTO student_exists
    FROM students
    WHERE name = student_name AND age = student_age AND class_id = student_class_id;
    
    IF student_exists > 0 THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Error: Duplicate student record exists';
    ELSE
        INSERT INTO students (name, age, class_id) VALUES (student_name, student_age, student_class_id);
    END IF;
END //
DELIMITER ;

CALL AddStudent('Budi', 16, 1);







